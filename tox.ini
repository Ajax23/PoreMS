[tox]
envlist = py35,coverage,coveralls,docs,packaging,dist
skip_missing_interpreters = True
ignore_basepython_conflict = True

[testenv]
description = default settings for unspecified tests
usedevelop = False
skip_install = False
passenv = *
basepython = python3.5

[testenv:py27]
deps =
    -r{toxinidir}/tools/tests-requirements.txt
commands =
    pytest tests/ --cov=pyDataverse --basetemp={envtmpdir}

[testenv:py34]
deps =
    -r{toxinidir}/tools/tests-requirements.txt
commands =
    pytest tests/ --cov=pyDataverse --basetemp={envtmpdir}

[testenv:py35]
deps =
    -r{toxinidir}/tools/tests-requirements.txt
commands =
    pytest tests/ --cov=pyDataverse --basetemp={envtmpdir}

[testenv:py36]
deps =
    -r{toxinidir}/tools/tests-requirements.txt
commands =
    pytest tests/ --cov=pyDataverse --basetemp={envtmpdir}

[testenv:py37]
deps =
    -r{toxinidir}/tools/tests-requirements.txt
commands =
    pytest tests/ --cov=pyDataverse --basetemp={envtmpdir}

[testenv:coverage]
description = create report for coverage
deps =
    -r{toxinidir}/tools/tests-requirements.txt
commands =
    pytest tests/ --cov=pyDataverse --cov-report=term-missing --cov-report=xml --cov-report=html

[testenv:coveralls]
description = create reports for coveralls
deps =
    -r{toxinidir}/tools/tests-requirements.txt
commands =
    pytest tests/ --doctest-modules -v --cov=pyDataverse

[flake8]
max-line-length = 80
ignore = E129
exclude =
    src/pyDataverse/docs/source/conf.py
    .tox
    .egg

[testenv:flake8]
description = flake8 for style guide testing
deps =
    -r{toxinidir}/tools/lint-requirements.txt
commands =
    flake8 src/pyDataverse/
    flake8 tests/
    isort --check-only --diff src/pyDataverse

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
deps =
    -r{toxinidir}/tools/docs-requirements.txt
commands =
    sphinx-build -d src/pyDataverse/docs/build/docs_doctree src/pyDataverse/docs/source docs/build/html --color -b html {posargs}

[testenv:packaging]
description = check packaging with twine
skip_install = True
recreate = True
deps =
    -r{toxinidir}/tools/packaging-requirements.txt
commands =
    python setup.py sdist bdist_wheel
    twine check dist/*

[testenv:dist]
description = install from dist
recreate = True
commands =
    pip freeze
    python -c "import pyDataverse; print(pyDataverse.__name__); print(pyDataverse.__version__)"

[testenv:pypitest]
description = install from test pypi
skip_install = True
recreate = True
commands =
    pip install --index-url https://test.pypi.org/simple/ pyDataverse
    pip freeze
    python -c "import pyDataverse; print(pyDataverse.__name__); print(pyDataverse.__version__)"

[testenv:pypi]
description = install from pypi
skip_install = True
recreate = True
commands =
    pip install pyDataverse
    pip freeze
    python -c "import pyDataverse; print(pyDataverse.__name__); print(pyDataverse.__version__)"
